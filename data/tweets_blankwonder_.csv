1269952284986716160 2020-06-08 11:19:53 UTC <Blankwonder> 没有 API
1269924001318498304 2020-06-08 09:27:30 UTC <Blankwonder> 我去年的一个 bug fb 都还是 open 状态
1269923326731759617 2020-06-08 09:24:49 UTC <Blankwonder> 然而 10Gbps 这档有两个不一样的标准…
1269908898607067137 2020-06-08 08:27:29 UTC <Blankwonder> 你记错了。
1269902108083380224 2020-06-08 08:00:30 UTC <Blankwonder> USB 3.0 时代这些版本号和名称真是要命了 pic.twitter.com/YPBRFTp25F
1269901760434335744 2020-06-08 07:59:07 UTC <Blankwonder> #TIL iMac Pro 的 4 个 USB-A 口不支持 USB 3.1 Gen 2，4 个 USB- C 口支持。
1269892344746106880 2020-06-08 07:21:43 UTC <Blankwonder> 测试的是 DNS 连通性，说明你网络真的有问题
1269877163953537024 2020-06-08 06:21:23 UTC <Blankwonder> 而在 iOS 上，系统的 API 已经几乎完成了一切，系统在觉得需要填充密码时将扩展程序唤起，应用只负责选择一个凭证并返回用户名和密码。其余工作都是系统搞定。 这样「预设场景」的 API 优点是：开发者省事、利于隐私保护和整体稳定性，缺点是：减少了第三方应用的可能性，限制了开发者的想象力。
1269877162695200769 2020-06-08 06:21:23 UTC <Blankwonder> Apple 的 API 设计越来越偏向于「预设场景」的 API，而非「提供能力」。举个例子，Elpass 在 macOS 上，是使用 Accessibility API 和 JS 去分析出密码框，再自己绘制出选单，最后使用 Accessibility API 或 Keyboard API 填充。
1269873536367091712 2020-06-08 06:06:58 UTC <Blankwonder> WWDC 2020 前不准备干活了
1269620669358256128 2020-06-07 13:22:10 UTC <Blankwonder> 万万没想到的是 Hover 2 也受禁飞区限制了🤦‍♂️  https://www.instagram.com/p/CBIqfvvgoBg/?igshid=3q4sn5ofxymf …
